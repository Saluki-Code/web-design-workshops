<html>
<head>
 <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
  <script src="http://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jcanvas/16.7.3/jcanvas.js"></script>

<style>
/*
    Making and Showing Objects
*/
.newObject {
    display: none;
}

/*
    ToolBar
*/

ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: #333;
}

li {
    float: left;
}

li a {
    display: block;
    color: white;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
}

li a:hover:not(.active) {
    background-color: #111;
}

.active {
    background-color: #4CAF50;
}
.mySun {
    position: absolute;
}
.cloud {
    width: 100px
}
</style>

<script>
/*
    Canvas: http://www.w3schools.com/html/html5_canvas.asp
    jQ: <script
  src="https://code.jquery.com/jquery-3.1.1.min.js"
  integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8="
  crossorigin="anonymous">
*/
var Lightning = function(element) {
  var _this = this;
  var canvas = element;
  var context = canvas.getContext("2d");
  
  this.clear = function() {
    canvas.width = canvas.width;
  	canvas.height = canvas.height;
	};
	
	this.strike = function(x1, y1, x2, y2, color1, color2, drawOrbs) {
		var x = x2 - x1;
		var y = y2 - y1;
		var segments = 10;
		var distance = Math.sqrt(x * x + y * y);
		var width = distance / segments;
		var prevX = x1;
		var prevY = y1;

    if(drawOrbs) {
		// Draw point
		context.strokeStyle = color1;
		context.fillStyle = color1;
		context.lineWidth = 2;
		context.beginPath();
		context.arc(x1, y1, 18 + (Math.random() * 4), 0, 2 * Math.PI, false);
		context.fill();
    }
		
		for(var i = 0; i <= segments; i++) {
			var magnitude = (width * i) / distance;

			var x3 = magnitude * x2 + (1 - magnitude) * x1;
			var y3 = magnitude * y2 + (1 - magnitude) * y1;
			
			if(i !== 0 && i !== segments) {
				x3 += (Math.random() * width) - (width / 2);
				y3 += (Math.random() * width) - (width / 2);
			}
			
			// Draw line
			context.strokeStyle = color1;
			context.lineWidth = 12;
			context.beginPath();
			context.moveTo(prevX, prevY);
			context.lineTo(x3, y3);
			context.closePath();
			context.stroke();
						
			// Draw point
			context.strokeStyle = color1;
			context.fillStyle = color1;
			context.beginPath();
			context.arc(x3, y3, 6, 0, 2 * Math.PI, false);
			context.fill();
			
			// Draw line
			context.strokeStyle = color2;
			context.lineWidth = 6;
			context.beginPath();
			context.moveTo(prevX, prevY);
			context.lineTo(x3, y3);
			context.closePath();
			context.stroke();
						
			// Draw point
			context.strokeStyle = color2;
			context.fillStyle = color2;
			context.beginPath();
			context.arc(x3, y3, 3, 0, 2 * Math.PI, false);
			context.fill();
			
			prevX = x3;
			prevY = y3;
		}
		
    if(drawOrbs) {
		// Draw point
		context.strokeStyle = color2;
		context.fillStyle = color2;
		context.lineWidth = 2;
		context.beginPath();
		context.arc(x1, y1, 12 + (Math.random() * 4), 0, 2 * Math.PI, false);
		context.fill();
    }
	};
}
    /*       Make Objects      */

    function makeSun(pos) {
        var numberOfRedSuns = document.getElementsByClassName("redSun").length;
        var mySun = $(".redSun")[numberOfRedSuns - 1];      
        
        $("body").append("<canvas class='redSun'></canvas>");
        
        var numberOfRedSuns = document.getElementsByClassName("redSun").length;
        var mySun = $(".redSun")[numberOfRedSuns - 1];

        var ctx2 = mySun.getContext("2d");
        
         
        // Create gradient
        var grd2 = ctx2.createRadialGradient(75,50,5,90,60,100);
        grd2.addColorStop(0,"red");
        grd2.addColorStop(.25,"white");
        grd2.addColorStop(1,"white");
        
        // Fill with gradient
        ctx2.fillStyle = grd2;
        ctx2.fillRect(10,10,150,80);
        
        positionObject(pos, 'redSun');
        
    }
    function makeRainbow(pos) {
     $("body").append("<canvas class='rainbow'></canvas>");
        var numberOfRainbows = document.getElementsByClassName("rainbow").length;
              
        var canvas = $(".rainbow")[numberOfRainbows - 1];
        
        
        
        var graphics = canvas.getContext("2d");
        
        var CX = canvas.width / 2,
            CY = canvas.height/ 2,
            sx = CX,
            sy = CY;
        
        for(var i = 180; i < 360; i+=0.1){
            var rad = i * (2*Math.PI) / 360;
            graphics.strokeStyle = "hsla("+i+", 100%, 50%, 0.1)";   
            graphics.beginPath();
            graphics.moveTo(CX, CY);
            graphics.lineTo(CX + sx * Math.cos(rad), CY + sy * Math.sin(rad));
            graphics.stroke();
        }
        
        
        
        
        
        positionObject(pos, 'rainbow');
    }
    function makeCloud(pos) {
             var canvas = setupCanvas("cloud");
              
              var context = canvas.getContext("2d");
            
              // draw cloud
              context.beginPath();
              context.moveTo(170, 80);
              context.bezierCurveTo(130, 100, 130, 150, 230, 150);
              context.bezierCurveTo(250, 180, 320, 180, 340, 150);
              context.bezierCurveTo(420, 150, 420, 120, 390, 100);
              context.bezierCurveTo(430, 40, 370, 30, 340, 50);
              context.bezierCurveTo(320, 5, 250, 20, 250, 50);
              context.bezierCurveTo(200, 5, 150, 20, 170, 80);
              context.closePath();
              context.lineWidth = 5;
              context.fillStyle = '#fff';
              context.fill();
              context.strokeStyle = '#0000ff';
              context.stroke();
            
              // save canvas image as data url (png format by default)
              var dataURL = canvas.toDataURL();
            
              // set canvasImg image src to dataURL
              // so it can be saved as an image
              // document.getElementById('canvasImg').src = dataURL;
            positionObject(pos, 'cloud');
            
            return 1;
    }
    function makeLightning(pos) {
             var canvas = setupCanvas("lightning");

              var context = canvas.getContext("2d");
            
              // draw lightning
              
        var lightning = new Lightning(canvas);
        
		var timer = setInterval(function() {
			lightning.clear();
			for(var t = 540/2; t < 540;t += 20){
			lightning.strike(50, 90, t, 420, "#557788", "#7799aa");
			lightning.strike(50, 90, t, 420, "#cfefff", "#ffffff", true);
			}
		}, 30);

            positionObject(pos, 'lightning');
            
            return 1;
    }
    function setupCanvas(instanceName) {
        
            if(instanceName == "lightning") {
                var canvasW = 640,
                    canvasH = 480;
                   $("body").append("<canvas class='" + instanceName +"'width='" + canvasW +"' height='" + canvasH +"' ></canvas>");
              
            } else {
                  $("body").append("<canvas class='" + instanceName +"'></canvas>");
              }  
              var instanceCount = document.getElementsByClassName(instanceName).length;
              
              var canvas = $("." + instanceName)[instanceCount - 1];
       
             return canvas;
              
    }
    function positionObject(pos, instanceName) {
        var x_pos = pos.pageX;
        var y_pos = pos.pageY;
        var objectInstances = document.getElementsByClassName(instanceName).length;
        var jsObject = document.getElementsByClassName(instanceName)[objectInstances - 1];
        var jqObject = $('.' + instanceName).last();

        y_pos -= jqObject.height()/2;
        x_pos -= jqObject.width()/2;
        
        
        jsObject.style.position = "absolute";
        jsObject.style.left = x_pos+'px';
        jsObject.style.top = y_pos+'px';

    }
    /*       End Make Objects      */


        /*       Place Objects      */
        var currentObjectFlag = "";
    
    var settingSun = false;
    var settingCloud = false;

    $("#addSun").on("click", function() {
            var objectName = 'redSun';
        
            if(currentObjectFlag == objectName) {
                currentObjectFlag = "";
            } else {
                currentObjectFlag = "redSun";
            }
            if(currentObjectFlag) {
                $("body").css('cursor','url(http://w17.snunit.k12.il/images/big_arrow.png),auto');
            } else {
                 $("body").css('cursor','default');
            }
    });
    
    $("#addLightning").on("click", function() {
            var objectName = 'lightning';
        
            if(currentObjectFlag == objectName) {
                currentObjectFlag = "";
            } else {
                currentObjectFlag = "lightning";
            }
            if(currentObjectFlag == "lightning") {
                $("body").css('cursor','url(http://w17.snunit.k12.il/images/big_arrow.png),auto');
            } else {
                 $("body").css('cursor','default');
            }
    });
    
    $("#addCloud").on("click", function() {
            var objectName = 'cloud';
        
            if(currentObjectFlag == objectName) {
                currentObjectFlag = "";
            } else {
                currentObjectFlag = "cloud";
            }
            if(currentObjectFlag == "cloud") {
                $("body").css('cursor','url(http://w17.snunit.k12.il/images/big_arrow.png),auto');
            } else {
                 $("body").css('cursor','default');
            }
    });
    
    $("#addRainbow").on("click", function() {
            var objectName = 'rainbow';
        
            if(currentObjectFlag == objectName) {
                currentObjectFlag = "";
            } else {
                currentObjectFlag = "rainbow";
            }
            if(currentObjectFlag == "rainbow") {
                $("body").css('cursor','url(http://w17.snunit.k12.il/images/big_arrow.png),auto');
            } else {
                 $("body").css('cursor','default');
            }
    });   
    
    
    $("body").on("dblclick", function(e) {
        switch (currentObjectFlag)
        {
           case "cloud": makeCloud(e);
           break;
           
           case "redSun": makeSun(e);
           break;
            
           case "rainbow": makeRainbow(e);
           
           case "lightning": makeLightning(e);
           default: ;
        }
    });
   
   
        /*      End Place Objects      */

</script>
</head>
<body>
<ul>
  <li><a id="addSun">Sun</a></li>
  <li><a id="addCloud">Cloud</a></li>
  <li><a id="addRainbow">Rainbow</a></li>
  <li><a id="addLightning">Lightning</a></li>
</ul>
</body>
</html>
